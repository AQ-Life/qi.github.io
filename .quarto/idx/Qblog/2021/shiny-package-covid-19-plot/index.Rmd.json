{"title":"Shiny package 绘制 COVID-19 Plot","markdown":{"yaml":{"title":"Shiny package 绘制 COVID-19 Plot","date":"2021-11-18","tags":["R","Tidyverse","shiny"],"categories":["R","Tidyverse","shiny"]},"containsRefs":false,"markdown":"\n\nShiny package 是在R中进行数据分析可视化非常著名的一个包，我们就采用这个包来展示他的一些功能。 数据来源和前期数据处理的解释，请参考上一篇文章 [R绘制COVID-19新增病例趋势图](https://aqlife.netlify.app/post/r/r-covid-19/r-covid-19/) ，这里直接放上前半部分的程序。\n\n```{r message=FALSE, warning=FALSE}\n#清空工作环境\nrm(list = ls())\noptions(digits = 4)\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(shiny)\nlibrary(ggplot2)\ncovid <- read.csv(\"owid-covid-data.csv\")\ncountry <- read_excel(\"国家和地区代码.xlsx\",\n                     col_names=TRUE)\n\ncovid1 <- transform(covid, \n                    peo_vac=people_vaccinated/10000, \n                    peo_fvac=people_fully_vaccinated/10000,\n                    ana_new=new_cases,\n                    ana_dea=new_deaths,\n                    low=0)\n\ncovidvac1 <- subset(covid1, subset = (peo_vac!=\"NA\"), select = c(iso_code, date, people_vaccinated_per_hundred, people_fully_vaccinated_per_hundred))\ncovidvac2 <- aggregate(covidvac1, by = list(covidvac1$iso_code), FUN = last)\ncovidvac3 <- rename(covidvac2, c(peo_vac1 = \"people_vaccinated_per_hundred\", peo_fvac1 = \"people_fully_vaccinated_per_hundred\"))\ncovid2 <- left_join(covid1,\n                    covidvac3,\n                    by=c(\"iso_code\"=\"iso_code\", \"date\"=\"date\"))\n                    \ncountry1 <- subset(country, \n                   subset = (X6!=\"NA\"), \n                   select = c(X2,X3,X6))\n\nanadata1 <- left_join(covid2,\n                      country1,\n                      by=c(\"iso_code\"=\"X6\"))\n\n#定义移动平均数的函数\nmav <- function(a,n){\n  stats::filter(a,rep(1/n,n),sides = 1)\n}\nanadata2 <- transform(anadata1,\n                      mean_new=mav(ana_new,7),\n                      mean_dea=mav(ana_dea,7),\n                      country_code=paste(iso_code,\"_\",X2,\"_\",X3))\n\ncountryname <- unique(anadata2$country_code)\n```\n\n接下来就是 shiny 包，准备针对每个国家绘制 新增病例、死亡、接种疫苗 三个图形，UI 设计程序如下：\n\n```{r}\nui <- fluidPage(\n  titlePanel(\"COVID-19\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"country_code\",\n                  \"Country:\",\n                  countryname),\n      radioButtons(\"ratio\", label = \"R Plot\",\n                   choices = list(\"新增病例\" = 1, \"死亡\" = 2, \"接种疫苗\" = 3),\n                   selected = 1)\n    ),\n    mainPanel(\n      h2(textOutput(\"textoutput\")),\n      plotOutput(\"plotoutput\")\n    )\n  )\n)\n```\n\nSERVER 服务器端程序基本同上一篇的文章的 ggplot2 绘图。\n\n```{r}\n\nserver <- function(input, output){\n  formulaText <- reactive({\n    input$country_code\n  })\n  \n  output$textoutput <- renderText({\n    formulaText()\n  })\n  \n  output$plotoutput <- renderPlot({\n    plotdata <- switch (input$country_code,\n        subset(anadata2,country_code==input$country_code)\n    )\n    \n    p1 <- ggplot(plotdata,aes(x=as.Date(date))) + \n      {if(input$ratio == 1) geom_col(aes(y=ana_new,fill=\"g_col\"))} +\n      {if(input$ratio == 2) geom_col(aes(y=ana_dea,fill=\"g_col\"))} +\n      {if(input$ratio == 3) geom_area(aes(y=peo_vac,fill=\"g_area1\"))} +\n      {if(input$ratio == 3) geom_area(aes(y=peo_fvac,fill=\"g_area2\"))} +\n      {if(input$ratio == 1) geom_line(aes(y=mean_new,color=\"g_line\"),size=1)} +\n      {if(input$ratio == 2) geom_line(aes(y=mean_dea,color=\"g_line\"),size=1)} +\n      {if(input$ratio == 3) geom_text(aes(y=peo_vac, label=peo_vac1))} +\n      {if(input$ratio == 3) geom_text(aes(y=peo_fvac, label=peo_fvac1))} +\n      \n      labs(x=NULL,y=NULL) +\n      scale_x_date(date_label=\"%y/%m/%d\",\n                   date_breaks = \"3 month\",\n                   minor_breaks = \"1 month\") +\n      {if(input$ratio == 1) scale_fill_manual(breaks = c(\"g_col\"), \n                             values = c(\"#cad5e5\"), \n                             label = c(\"New Case\"))} + \n      {if(input$ratio == 2) scale_fill_manual(breaks = c(\"g_col\"), \n                                              values = c(\"#c5c4c5\"), \n                                              label = c(\"Death\"))} + \n      {if(input$ratio == 3) scale_fill_manual(breaks = c(\"g_area1\", \"g_area2\"), \n                                              values = c(\"#b9cfe7\", \"#8ca6ce\"), \n                                              label = c(\"Vaccined\", \"Fully Vaccined\"))} +\n      {if(input$ratio == 1) scale_color_manual(breaks = c(\"g_line\"),\n                                               values = c(\"blue\"), \n                                               label = c(\"Monving Average\"))} +\n      {if(input$ratio == 2) scale_color_manual(breaks = c(\"g_line\"),\n                                               values = c(\"#616161\"), \n                                               label = c(\"Monving Average\"))} +\n      \n      theme(plot.title =element_text(hjust = 0.5, vjust = 0.5), \n            legend.position = \"bottom\", \n            legend.title = element_blank(), \n            legend.background = element_blank()) \n    \n    p2 <- p1 + theme(panel.background=element_rect(fill='transparent', \n                                                   color='gray'),\n                     legend.key=element_rect(fill='transparent', \n                                             color='transparent'))\n    p2\n  })\n}\n```\n\n最后就是 run script。\n\n```{r message=FALSE, warning=FALSE}\n#shinyApp(ui = ui, server = server)\n```\n","srcMarkdownNoYaml":"\n\nShiny package 是在R中进行数据分析可视化非常著名的一个包，我们就采用这个包来展示他的一些功能。 数据来源和前期数据处理的解释，请参考上一篇文章 [R绘制COVID-19新增病例趋势图](https://aqlife.netlify.app/post/r/r-covid-19/r-covid-19/) ，这里直接放上前半部分的程序。\n\n```{r message=FALSE, warning=FALSE}\n#清空工作环境\nrm(list = ls())\noptions(digits = 4)\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(shiny)\nlibrary(ggplot2)\ncovid <- read.csv(\"owid-covid-data.csv\")\ncountry <- read_excel(\"国家和地区代码.xlsx\",\n                     col_names=TRUE)\n\ncovid1 <- transform(covid, \n                    peo_vac=people_vaccinated/10000, \n                    peo_fvac=people_fully_vaccinated/10000,\n                    ana_new=new_cases,\n                    ana_dea=new_deaths,\n                    low=0)\n\ncovidvac1 <- subset(covid1, subset = (peo_vac!=\"NA\"), select = c(iso_code, date, people_vaccinated_per_hundred, people_fully_vaccinated_per_hundred))\ncovidvac2 <- aggregate(covidvac1, by = list(covidvac1$iso_code), FUN = last)\ncovidvac3 <- rename(covidvac2, c(peo_vac1 = \"people_vaccinated_per_hundred\", peo_fvac1 = \"people_fully_vaccinated_per_hundred\"))\ncovid2 <- left_join(covid1,\n                    covidvac3,\n                    by=c(\"iso_code\"=\"iso_code\", \"date\"=\"date\"))\n                    \ncountry1 <- subset(country, \n                   subset = (X6!=\"NA\"), \n                   select = c(X2,X3,X6))\n\nanadata1 <- left_join(covid2,\n                      country1,\n                      by=c(\"iso_code\"=\"X6\"))\n\n#定义移动平均数的函数\nmav <- function(a,n){\n  stats::filter(a,rep(1/n,n),sides = 1)\n}\nanadata2 <- transform(anadata1,\n                      mean_new=mav(ana_new,7),\n                      mean_dea=mav(ana_dea,7),\n                      country_code=paste(iso_code,\"_\",X2,\"_\",X3))\n\ncountryname <- unique(anadata2$country_code)\n```\n\n接下来就是 shiny 包，准备针对每个国家绘制 新增病例、死亡、接种疫苗 三个图形，UI 设计程序如下：\n\n```{r}\nui <- fluidPage(\n  titlePanel(\"COVID-19\"),\n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"country_code\",\n                  \"Country:\",\n                  countryname),\n      radioButtons(\"ratio\", label = \"R Plot\",\n                   choices = list(\"新增病例\" = 1, \"死亡\" = 2, \"接种疫苗\" = 3),\n                   selected = 1)\n    ),\n    mainPanel(\n      h2(textOutput(\"textoutput\")),\n      plotOutput(\"plotoutput\")\n    )\n  )\n)\n```\n\nSERVER 服务器端程序基本同上一篇的文章的 ggplot2 绘图。\n\n```{r}\n\nserver <- function(input, output){\n  formulaText <- reactive({\n    input$country_code\n  })\n  \n  output$textoutput <- renderText({\n    formulaText()\n  })\n  \n  output$plotoutput <- renderPlot({\n    plotdata <- switch (input$country_code,\n        subset(anadata2,country_code==input$country_code)\n    )\n    \n    p1 <- ggplot(plotdata,aes(x=as.Date(date))) + \n      {if(input$ratio == 1) geom_col(aes(y=ana_new,fill=\"g_col\"))} +\n      {if(input$ratio == 2) geom_col(aes(y=ana_dea,fill=\"g_col\"))} +\n      {if(input$ratio == 3) geom_area(aes(y=peo_vac,fill=\"g_area1\"))} +\n      {if(input$ratio == 3) geom_area(aes(y=peo_fvac,fill=\"g_area2\"))} +\n      {if(input$ratio == 1) geom_line(aes(y=mean_new,color=\"g_line\"),size=1)} +\n      {if(input$ratio == 2) geom_line(aes(y=mean_dea,color=\"g_line\"),size=1)} +\n      {if(input$ratio == 3) geom_text(aes(y=peo_vac, label=peo_vac1))} +\n      {if(input$ratio == 3) geom_text(aes(y=peo_fvac, label=peo_fvac1))} +\n      \n      labs(x=NULL,y=NULL) +\n      scale_x_date(date_label=\"%y/%m/%d\",\n                   date_breaks = \"3 month\",\n                   minor_breaks = \"1 month\") +\n      {if(input$ratio == 1) scale_fill_manual(breaks = c(\"g_col\"), \n                             values = c(\"#cad5e5\"), \n                             label = c(\"New Case\"))} + \n      {if(input$ratio == 2) scale_fill_manual(breaks = c(\"g_col\"), \n                                              values = c(\"#c5c4c5\"), \n                                              label = c(\"Death\"))} + \n      {if(input$ratio == 3) scale_fill_manual(breaks = c(\"g_area1\", \"g_area2\"), \n                                              values = c(\"#b9cfe7\", \"#8ca6ce\"), \n                                              label = c(\"Vaccined\", \"Fully Vaccined\"))} +\n      {if(input$ratio == 1) scale_color_manual(breaks = c(\"g_line\"),\n                                               values = c(\"blue\"), \n                                               label = c(\"Monving Average\"))} +\n      {if(input$ratio == 2) scale_color_manual(breaks = c(\"g_line\"),\n                                               values = c(\"#616161\"), \n                                               label = c(\"Monving Average\"))} +\n      \n      theme(plot.title =element_text(hjust = 0.5, vjust = 0.5), \n            legend.position = \"bottom\", \n            legend.title = element_blank(), \n            legend.background = element_blank()) \n    \n    p2 <- p1 + theme(panel.background=element_rect(fill='transparent', \n                                                   color='gray'),\n                     legend.key=element_rect(fill='transparent', \n                                             color='transparent'))\n    p2\n  })\n}\n```\n\n最后就是 run script。\n\n```{r message=FALSE, warning=FALSE}\n#shinyApp(ui = ui, server = server)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","editor":"visual","theme":{"light":"../../../custom.scss","dark":["../../../custom.scss","../../../themedark.scss"]},"title":"Shiny package 绘制 COVID-19 Plot","date":"2021-11-18","tags":["R","Tidyverse","shiny"],"categories":["R","Tidyverse","shiny"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}